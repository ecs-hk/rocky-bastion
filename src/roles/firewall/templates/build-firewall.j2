#!/bin/bash

# Managed by Ansible

# Display rules:     nft list ruleset
# Save rules:        nft list ruleset > /etc/nftables.conf
# Add to blackhole:  nft add element inet filter blackhole { 10.1.1.4 }
# Rm from blackhole: nft delete element inet filter blackhole { 10.1.1.4 }
# List blackhole:    nft list set inet filter blackhole

set -u
set -o pipefail

# --------------------------------------------------------------------------- #
#                       VARIABLE DEFINITION
# --------------------------------------------------------------------------- #

PATH=/usr/bin:/bin:/usr/sbin:/sbin

readonly _sshd_port="{{ sshd_port }}"
readonly _fbt="{{ firewall_blackhole_timeout }}"

readonly _funcs='
        flush_ruleset
        add_chains
        add_blackhole_set
        add_internal_allow
        add_state_handling
        add_input_chain_rules
        default_input_chain_to_drop
        '

# --------------------------------------------------------------------------- #
#                       FUNCTIONS
# --------------------------------------------------------------------------- #

errout() {
        local _msg="${0##*/} error: ${1}"
        printf '%s\n' "${_msg}" >&2
        exit 1
}

flush_ruleset() {
        # Start clean
        nft flush ruleset
        [ ${?} -eq 0 ] || return 1

        nft add table inet filter
        [ ${?} -eq 0 ] || return 1
}

add_chains() {
        local _c='nft add chain inet filter'

        # Add chains (start with input 'accept' so no get locked out)
        ${_c} input "{ type filter hook input priority 0; policy accept; }"
        [ ${?} -eq 0 ] || return 1

        ${_c} forward "{ type filter hook forward priority 0; policy drop; }"
        [ ${?} -eq 0 ] || return 1

        ${_c} output "{ type filter hook output priority 0; policy accept; }"
        [ ${?} -eq 0 ] || return 1
}

add_blackhole_set() {
        local _c='nft add set inet filter blackhole'
        ${_c} "{ type ipv4_addr; timeout ${_fbt}; size 65536; }"
        [ ${?} -eq 0 ] || return 1
}

add_internal_allow() {
        nft add rule inet filter input meta iifname "internal" accept
        [ ${?} -eq 0 ] || return 1

        nft add rule inet filter input meta iif lo accept
        [ ${?} -eq 0 ] || return 1
}

add_state_handling() {
        local _c='nft add rule inet filter input'

        ${_c} ct state "{ established, related }" accept
        [ ${?} -eq 0 ] || return 1
}

add_input_chain_rules() {
        local _c='nft add rule inet filter input'

        ${_c} ip saddr @blackhole drop
        [ ${?} -eq 0 ] || return 1

        ${_c} tcp dport ${_sshd_port} accept
        [ ${?} -eq 0 ] || return 1
}

default_input_chain_to_drop() {
        local _c='nft chain inet filter'

        ${_c} input "{ type filter hook input priority 0; policy drop; }"
        [ ${?} -eq 0 ] || return 1
}

# --------------------------------------------------------------------------- #
#                       MAIN LOGIC
# --------------------------------------------------------------------------- #

for _i in ${_funcs} ; do
        ${_i}
        [ ${?} -eq 0 ] || errout "Broken firewall, issue with ${_i}()"
done

exit 0
